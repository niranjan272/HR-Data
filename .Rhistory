data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:8)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
test_aggr <- features_1(test)
test_data_final <- features_final(test,test_aggr)
colnames(test_data_final)
features <- function(data){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare","Embarked")
data_filtered <- data[,features_data]
data_filtered$Age[is.na(data_filtered$Age)] <- -1
data_filtered$Fare[is.na(data_filtered$Fare)] <- median(data_filtered$Fare,na.rm = TRUE)
data_filtered$Embarked[data_filtered$Embarked == ""] <-
data_filtered$Sex <- as.factor(data_filtered$Sex)
data_filtered$Embarked <- as.factor(data_filtered$Embarked)
return(data_filtered)
}
check1<- features(test)
colnames(check1)
colnames(train_data_final)
colnames(test_data_final)
head(check1,2)
head(train_data_final,2)
head(test_data_final,2)
rf_train <- randomForest(train_data_final,as.factor(train$Survived),ntree = 500,importance = TRUE)
rf_train$confusion
test_result <- data.frame(test$PassengerId)
test_result
test_result$Survived <- predict(rf_train,test_data_final)
rf_train
nb <- naiveBayes(train_data_final,as.factor(train$Survived))
submission <- data.frame(PassengerId = test$PassengerId)
submission$Survived<- predict(nb,as.data.frame(test_data_final))
write.csv(submission, file = "1_naive_bayes_r_submission.csv", row.names=FALSE)
nb$tables
library(caret)
model <- glm(Survived ~., family = binomial(link = "logit"),data = train_data_final)
summary(model)
test_data_final$Survived <- train$Survived
train_data_final$Survived <- train$Survived
model <- glm(Survived ~., family = binomial(link = "logit"),data = train_data_final)
train_data_final$Survived <- train$Survived
model <- glm(Survived ~., family = binomial(link = "logit"),data = train_data_final)
summary(model)
fitted.result <- predict(model, newdata = test_data_final,type = 'response')
fitted.result <- ifelse(fitted.result > 0.5,1,0)
head(fitted.result,5)
write.csv(fitted.result,"fitted_result.csv")
rf_train <- randomForest(train_data_final,as.factor(train$Survived),ntree = 500,importance = TRUE)
rf_train
rf_train$confusion
test_result <- data.frame(test$PassengerId)
test_result
test_result$Survived <- predict(rf_train,test_data_final)
head(check1,2)
head(train_data_final,2)
head(test_data_final,2)
test_data_final <- features_final(test,test_aggr)
rf_train <- randomForest(train_data_final,as.factor(train$Survived),ntree = 500,importance = TRUE)
rf_train
rf_train$confusion
test_result <- data.frame(test$PassengerId)
test_result
test_result$Survived <- predict(rf_train,test_data_final)
head(check1,2)
head(train_data_final,2)
test_data_final <- features_final(test,test_aggr)
train_data_final <- features_final(train,train_aggr)
rf_train <- randomForest(train_data_final,as.factor(train$Survived),ntree = 500,importance = TRUE)
rf_train
test_result <- data.frame(test$PassengerId)
test_result$Survived <- predict(rf_train,test_data_final)
head(train_data_final,2)
head(test_data_final,2)
str(train_data_final)
str(test_data_final)
test_result$Survived <- as.factor(predict(rf_train,test_data_final))
train <- read.csv("C:\\Users\\Niranjan\\Documents\\R\\Kaggle\\train_titanic.csv",stringsAsFactors=FALSE)
test <- read.csv("C:\\Users\\Niranjan\\Documents\\R\\Kaggle\\test_titanic.csv",stringsAsFactors=FALSE)
features_1 <- function(data){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data[,features_data]
data_filtered_aggr <- aggregate(data_filtered,by = list(data_filtered$Pclass,data_filtered$Sex),FUN = mean, na.rm = T)
data_filtered_aggr <- data_filtered_aggr[,c(-3,-5)]
colnames(data_filtered_aggr)[1] <- "Pclass"
colnames(data_filtered_aggr)[2] <- "Sex"
data_filtered_aggr$key <- paste(data_filtered_aggr$Pclass,data_filtered_aggr$Sex,sep = "_")
return(data_filtered_aggr)
}
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare","Embarked")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:8)]
return(data_filtered_merged)
}
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:8)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
test_aggr <- features_1(test)
test_data_final <- features_final(test,test_aggr)
colnames(test_data_final)
rf_train <- randomForest(train_data_final,as.factor(train$Survived),ntree = 500,importance = TRUE)
rf_train
rf_train$confusion
write.csv(test_result,file = "titanic_survived.csv",row.names = FALSE)
test_result <- data.frame(test$PassengerId)
test_result
test_result$Survived <- predict(rf_train,test_data_final)
write.csv(test_result,file = "titanic_survived.csv",row.names = FALSE)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
features_1 <- function(data){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data[,features_data]
data_filtered_aggr <- aggregate(data_filtered,by = list(data_filtered$Pclass,data_filtered$Sex),FUN = mean, na.rm = T)
data_filtered_aggr <- data_filtered_aggr[,c(-3,-5)]
colnames(data_filtered_aggr)[1] <- "Pclass"
colnames(data_filtered_aggr)[2] <- "Sex"
data_filtered_aggr$key <- paste(data_filtered_aggr$Pclass,data_filtered_aggr$Sex,sep = "_")
return(data_filtered_aggr)
}
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
#data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
#data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
#data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
#data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:4)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
test_aggr <- features_1(test)
test_data_final <- features_final(test,test_aggr)
colnames(test_data_final)
rf_train <- randomForest(train_data_final,as.factor(train$Survived),ntree = 500,importance = TRUE)
rf_train
rf_train$confusion
test_result <- data.frame(test$PassengerId)
test_result
test_result$Survived <- predict(rf_train,test_data_final)
write.csv(test_result,file = "titanic_survived.csv",row.names = FALSE)
colnames(train)
colnames(train_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
features_1 <- function(data){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data[,features_data]
data_filtered_aggr <- aggregate(data_filtered,by = list(data_filtered$Pclass,data_filtered$Sex),FUN = mean, na.rm = T)
data_filtered_aggr <- data_filtered_aggr[,c(-3,-5)]
colnames(data_filtered_aggr)[1] <- "Pclass"
colnames(data_filtered_aggr)[2] <- "Sex"
data_filtered_aggr$key <- paste(data_filtered_aggr$Pclass,data_filtered_aggr$Sex,sep = "_")
return(data_filtered_aggr)
}
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
#data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_data_final <- features_final(train,train_aggr)
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare","Embarked")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
#data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare","Embarked")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
rf_train <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked ,data = train_data_final)
rf_train <- randomForest(factor(train$Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked ,data = train_data_final)
train_aggr <- features_1(train)
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare","Embarked")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:8)]
return(data_filtered_merged)
}
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
test_aggr <- features_1(test)
test_data_final <- features_final(test,test_aggr)
colnames(test_data_final)
rf_train <- randomForest(factor(train$Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked ,data = train_data_final)
rf_train
rf_train$confusion
test_result <- data.frame(test$PassengerId)
test_result
test_result$Survived <- predict(rf_train,test_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare","Embarked")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:8)]
return(data_filtered_merged)
}
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:8)]
return(data_filtered_merged)
}
#Build Train Data
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
features_final <- function(data1,data2){
features_data <- c("Pclass","Age","Sex","Parch","SibSp","Fare")
data_filtered <- data1[,features_data]
data_filtered$key <- paste(data_filtered$Pclass,data_filtered$Sex,sep = "_")
data2 <- data2[,c(3,6,7)]
colnames(data2)[1] <- "age_aggr"
colnames(data2)[2] <- "fare_aggr"
data_filtered_merged <- merge(data_filtered,data2,by = "key")
data_filtered_merged$Age[is.na(data_filtered_merged$Age)] <- data_filtered_merged$age_aggr
data_filtered_merged$Fare[is.na(data_filtered_merged$Fare)] <- data_filtered_merged$fare_aggr
#data_filtered_merged$Embarked[data_filtered_merged$Embarked == ""] <-
data_filtered_merged$Sex <- as.factor(data_filtered_merged$Sex)
#data_filtered_merged$Embarked <- as.factor(data_filtered_merged$Embarked)
data_filtered_merged <- data_filtered_merged[,c(2:7)]
return(data_filtered_merged)
}
#Build Train Data
train_aggr <- features_1(train)
train_data_final <- features_final(train,train_aggr)
colnames(train_data_final)
#Build Test Data
test_aggr <- features_1(test)
test_data_final <- features_final(test,test_aggr)
colnames(test_data_final)
rf_train <- randomForest(factor(train$Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare,data = train_data_final)
rf_train
rf_train$confusion
test_result <- data.frame(test$PassengerId)
test_result
test_result$Survived <- predict(rf_train,test_data_final)
colnames(test_result)
colnames(test_result)[1] <- "PassengerId"
write.csv(test_result,file = "titanic_survived.csv",row.names = FALSE)
setwd("E:\\Coursera\\Tableau\\TerroristData-Kaggle\\")
terrorist_data <- read.csv("globalterrorismdb_0616dist.csv")
head(terrorist_data,5)
#Filter data for 21st Century
terrorist_data_21_centrury <- subset(terrorist_data,year>=2000)
head(terrorist_data_21_centrury,2)
setwd("E:\\Coursera\\Tableau\\TerroristData-Kaggle\\")
terrorist_data <- read.csv("globalterrorismdb_0616dist.csv")
setwd("E:\\Coursera\\Tableau\\TerroristData-Kaggle\\")
pwd
pwd()
dir()
setwd("E:\\Coursera\\Tableau\\TerroristData-Kaggle\\")
terrorist_data <- read.csv("globalterrorismdb_0616dist.csv")
library(corrplot)
library(caret)
library(rpart)
library(C50)
library(pROC)
library(randomForest)
set.seed(43)
setwd("E:\\Coursera\\HR Data\\")
hr_data <- read.csv("E:\\Coursera\\HR Data\\HR_comma_sep.csv")
print(head(hr_data),3)
ncol(hr_data)
correlation_hr = cor(hr_data[,c(1:8)])
print(correlation_hr)
corrplot(correlation_hr,method = "circle")
colnames(hr_data)
relationship_project_accident  <- lm(number_project ~Work_accident,data = hr_data)
summary(relationship_project_accident)
colnames(hr_data)
relationship_project_accident  <- lm(salary ~ number_project + Work_accident + sales,data = hr_data)
summary(relationship_project_accident)
relationship_project_accident  <- lm(salary ~ number_project + Work_accident,data = hr_data)
summary(relationship_project_accident)
